{
    "sourceFile": "views/project_template.ejs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1741548554850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741549951158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,8 +136,27 @@\n     </style>\n   </head>\n \n   <body onload=\"init()\">\n+    <!-- Move the form here, right after body opens -->\n+    <div id=\"createDocumentForm\" style=\"display: none;\">\n+        <h2>Create Document</h2>\n+        <div class=\"form-group\">\n+            <label for=\"documentTitle\">Document Title</label>\n+            <input type=\"text\" id=\"documentTitle\" class=\"form-control\" required>\n+            \n+            <label for=\"documentDescription\">Document Description</label>\n+            <input type=\"textbox\" id=\"documentDescription\" class=\"form-control\">\n+            \n+            <input type=\"button\" id=\"documentColumn\" class=\"form-control\" value=\"Column\">\n+            <input type=\"button\" id=\"documentAssignee\" class=\"form-control\" value=\"Assignee\">\n+            <input type=\"button\" id=\"documentLabel\" class=\"form-control\" value=\"Label\">\n+            <input type=\"button\" id=\"documentProject\" class=\"form-control\" value=\"Assign to Project\">\n+            <input type=\"button\" id=\"MileStone\" class=\"form-control\" value=\"MileStone\">\n+        </div>\n+        <button type=\"submit\" class=\"btn btn-primary\" id='createDoc'>Create Document</button>\n+        <button type=\"button\" class=\"btn btn-secondary\" onclick=\"closeDocumentForm()\">Cancel</button>\n+    </div>\n     <!-- Without header: navigation missing -->\n     <%- include('partials/header') %>\n \n     <!-- Without this form: no way to c\n"
                },
                {
                    "date": 1741550065728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,27 +136,8 @@\n     </style>\n   </head>\n \n   <body onload=\"init()\">\n-    <!-- Move the form here, right after body opens -->\n-    <div id=\"createDocumentForm\" style=\"display: none;\">\n-        <h2>Create Document</h2>\n-        <div class=\"form-group\">\n-            <label for=\"documentTitle\">Document Title</label>\n-            <input type=\"text\" id=\"documentTitle\" class=\"form-control\" required>\n-            \n-            <label for=\"documentDescription\">Document Description</label>\n-            <input type=\"textbox\" id=\"documentDescription\" class=\"form-control\">\n-            \n-            <input type=\"button\" id=\"documentColumn\" class=\"form-control\" value=\"Column\">\n-            <input type=\"button\" id=\"documentAssignee\" class=\"form-control\" value=\"Assignee\">\n-            <input type=\"button\" id=\"documentLabel\" class=\"form-control\" value=\"Label\">\n-            <input type=\"button\" id=\"documentProject\" class=\"form-control\" value=\"Assign to Project\">\n-            <input type=\"button\" id=\"MileStone\" class=\"form-control\" value=\"MileStone\">\n-        </div>\n-        <button type=\"submit\" class=\"btn btn-primary\" id='createDoc'>Create Document</button>\n-        <button type=\"button\" class=\"btn btn-secondary\" onclick=\"closeDocumentForm()\">Cancel</button>\n-    </div>\n     <!-- Without header: navigation missing -->\n     <%- include('partials/header') %>\n \n     <!-- Without this form: no way to c\n"
                },
                {
                    "date": 1741550568162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,23 +150,29 @@\n         <button type=\"submit\" class=\"btn btn-primary\">Create Column</button>\n     </form>\n \n     <!-- Without hidden attribute: form shows before any columns exist -->\n-    <form id=\"createDocumentForm\" hidden>\n-        <h2>Create Document</h2>\n+    <form id=\"createDocumentForm\" hidden class=\"document-form\">\n+        <div class=\"form-header\">\n+            <h2>Create Document</h2>\n+            <span class=\"close-btn\">&times;</span>\n+        </div>\n         <div class=\"form-group\">\n             <label for=\"documentTitle\">Document Title</label>\n             <input type=\"text\" id=\"documentTitle\" class=\"form-control\" required>\n-            <input type=\"button\" id=\"documentColumn\" class=\"form-control\" value=\"Column\">\n+            \n             <label for=\"documentDescription\">Document Description</label>\n-            <input type=\"textbox\" id=\"documentDescription\" class=\"form-control\">\n+            <textarea id=\"documentDescription\" class=\"form-control\"></textarea>\n             \n-            <input type=\"button\" id=\"documentAssignee\" class=\"form-control\" value=\"Assignee\">\n-            <input type=\"button\" id=\"documentLabel\" class=\"form-control\" value=\"Label\">\n-            <input type=\"button\" id=\"documentProject\" class=\"form-control\" value=\"Assign to Project\">\n-            <input type=\"button\" id=\"MileStone\" class=\"form-control\" value=\"MileStone\">\n+            <div class=\"form-buttons\">\n+                <input type=\"button\" id=\"documentColumn\" class=\"form-control btn-secondary\" value=\"Column\">\n+                <input type=\"button\" id=\"documentAssignee\" class=\"form-control btn-secondary\" value=\"Assignee\">\n+                <input type=\"button\" id=\"documentLabel\" class=\"form-control btn-secondary\" value=\"Label\">\n+                <input type=\"button\" id=\"documentProject\" class=\"form-control btn-secondary\" value=\"Assign to Project\">\n+                <input type=\"button\" id=\"MileStone\" class=\"form-control btn-secondary\" value=\"MileStone\">\n+            </div>\n         </div>\n-        <button type=\"submit\" class=\"btn btn-primary\" id='createDoc' data-id=\"<%- %>\"\">Create Document</button>\n+        <button type=\"submit\" class=\"btn btn-primary\" id='createDoc'>Create Document</button>\n     </form>\n \n     <!-- Without this container: nowhere to place dragable columns -->\n     <div id=\"dragparent\" class=\"drag-container\"></div>\n"
                },
                {
                    "date": 1741550622287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,14 +117,15 @@\n             align-items: baseline;\n         }\n         #createDocumentForm{\n             border: 1px solid black;\n-            position : fixed;\n+            position: fixed;\n             width: 30%;\n             z-index: 2;\n             background-color: white;\n-            top:auto;\n-            left:auto;\n+            top: 50%;\n+            left: calc(50% + 400px);\n+            transform: translate(-50%, -50%);\n         }\n         body{\n             position: relative;\n             height: 100vh;\n"
                },
                {
                    "date": 1741550711382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,8 +133,28 @@\n         footer{\n             position: sticky;\n             top: 100vh;\n         }\n+        .close-btn {\n+            position: absolute;\n+            right: 10px;\n+            top: 10px;\n+            font-size: 24px;\n+            cursor: pointer;\n+            color: #666;\n+            transition: color 0.2s;\n+        }\n+        \n+        .close-btn:hover {\n+            color: #000;\n+        }\n+\n+        .form-header {\n+            position: relative;\n+            padding: 15px;\n+            border-bottom: 1px solid #ddd;\n+            margin-bottom: 15px;\n+        }\n     </style>\n   </head>\n \n   <body onload=\"init()\">\n"
                }
            ],
            "date": 1741548554850,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <!-- Without reset.css: inconsistent element styling across browsers -->\n    <link rel=\"stylesheet\" href=\"/css/reset.css\" />\n    <link rel=\"stylesheet\" href=\"/css/style.css\" />\n    <link rel=\"stylesheet\" href=\"/css/dragula.css\"/>\n    <!-- Without font preconnect: slow font loading and page render -->\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,400;0,700;0,900;1,400;1,700&display=swap\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap\" rel=\"stylesheet\">\n    \n    <title>Project Template</title>\n    <style>\n        .drag-container {\n            display: flex;\n            flex-wrap: wrap;\n            height: fit-content;\n            overflow-y: auto;\n        }\n        .dragColumn {\n            border: 1px solid #ccc;\n            padding: 10px;\n            background-color: #f9f9f9;\n            box-sizing: border-box;\n            word-wrap: break-word;\n            margin: 10px;\n            flex: 1 0 10%;\n            position: relative;\n           display: flex;\n           position: relative;\n\n           flex-flow: column nowrap;\n           align-items: inherit;\n           justify-content: flex-start;\n        }\n        .gu-mirror{\n            /*this was required to flip right-side -up the dragged objects.  */\n            transform: rotate(0deg);\n        }\n        .handle, .bar{\n            border:  1px solid #ccc;\n            font-size: 1.5rem;\n            width: 3vh;\n            height: 3vh;\n            padding: 0.1vh 0 0 0;\n            display: inline-block;\n            text-align: center;\n            background-image: url(/images/Icons2.webp);\n            background-color: goldenrod;\n            background-size: 1155%;\n            background-position: 90.5% 37%;\n            border-radius: 22%;\n        }\n        .dragDocument {\n           border: 1px, solid, black;\n           background-color: #08CF65;\n           z-index: 1;\n           position: relative;\n           display: flex;\n           position: relative;\n           flex-flow: column nowrap;\n           align-items: flex-start;\n           justify-content: flex-start;\n        }\n        .deleteButton {\n            border: 1px solid #ccc;\n            font-size: 1.5rem;\n            width: 3vh;\n            height: 3vh;\n            padding: 0.1vh 0 0 0;\n            display: flex;\n            text-align: center;\n            background-image: url(/images/Icons1.webp);\n            background-color: lightgrey;\n            background-size: 1300%;\n            background-position: 63% 37%;\n            border-radius: 22%;\n            position: relative;\n            /* bottom: 7%; */\n            /* left: 95%; */\n            margin: 1% 1%;\n            /* justify-self: flex-end; */\n            /* flex-direction: row; */\n            /* align-self: flex-end; */\n        }\n        .dragDocument .deleteButton{\n            align-self: flex-end;\n        }\n        .newDocPopupButton {\n            border: 1px solid #ccc;\n            font-size: 1.5rem;\n            width: 3vw;\n            height: 3vh;\n            padding: 0.1vh 0 0 0;\n            display: flex\n;       \n            text-align: center;\n            background-image: url(/images/Icons1.webp);\n            background-color: lightgrey;\n            background-size: 1000%;\n            background-position: 36% 63%;\n            border-radius: 22%;\n            position: relative;\n            margin: 1% 1%;\n            \n        }\n         nav.columnNav{\n            display: flex;\n            flex-flow: row nowrap;\n            justify-content: space-between;\n            position: relative;\n            align-items: baseline;\n        }\n        #createDocumentForm{\n            border: 1px solid black;\n            position : fixed;\n            width: 30%;\n            z-index: 2;\n            background-color: white;\n            top:auto;\n            left:auto;\n        }\n        body{\n            position: relative;\n            height: 100vh;\n        }\n        footer{\n            position: sticky;\n            top: 100vh;\n        }\n    </style>\n  </head>\n\n  <body onload=\"init()\">\n    <!-- Without header: navigation missing -->\n    <%- include('partials/header') %>\n\n    <!-- Without this form: no way to c\n     new columns -->\n    <form id=\"createColumnForm\">\n        <div class=\"form-group\">\n            <label for=\"columnContent\">Column Content</label>\n            <input type=\"text\" id=\"columnContent\" class=\"form-control\" required>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Create Column</button>\n    </form>\n\n    <!-- Without hidden attribute: form shows before any columns exist -->\n    <form id=\"createDocumentForm\" hidden>\n        <h2>Create Document</h2>\n        <div class=\"form-group\">\n            <label for=\"documentTitle\">Document Title</label>\n            <input type=\"text\" id=\"documentTitle\" class=\"form-control\" required>\n            <input type=\"button\" id=\"documentColumn\" class=\"form-control\" value=\"Column\">\n            <label for=\"documentDescription\">Document Description</label>\n            <input type=\"textbox\" id=\"documentDescription\" class=\"form-control\">\n            \n            <input type=\"button\" id=\"documentAssignee\" class=\"form-control\" value=\"Assignee\">\n            <input type=\"button\" id=\"documentLabel\" class=\"form-control\" value=\"Label\">\n            <input type=\"button\" id=\"documentProject\" class=\"form-control\" value=\"Assign to Project\">\n            <input type=\"button\" id=\"MileStone\" class=\"form-control\" value=\"MileStone\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" id='createDoc' data-id=\"<%- %>\"\">Create Document</button>\n    </form>\n\n    <!-- Without this container: nowhere to place dragable columns -->\n    <div id=\"dragparent\" class=\"drag-container\"></div>\n\n    <!-- Without footer: missing page closure and contact info -->\n    <%- include('partials/footer') %>\n    \n    <!-- Without main.js: core application features missing -->\n    <script src=\"/js/main.js\"></script>\n    <!-- Without dragula.js: no drag-and-drop functionality -->\n    <script src=\"/js/dragula.js\"></script>\n\n    <script>\n        // Without this array: unable to track columns for dragula integration\n        let listOfColumn = [];\n\n        function init() {\n            const createColumnForm = document.getElementById('createColumnForm');\n            const createDocumentForm = document.getElementById('createDocumentForm');\n            const dragparent = document.getElementById('dragparent');\n\n            // Without this event listener: document form submission not handled\n            createDocumentForm.addEventListener('submit', createDocumentFunc);\n\n            // Without this event listener: columns can't be created\n            createColumnForm.addEventListener('submit',createColumnFunc )\n\n            function createColumnFunc (event) {\n                event.preventDefault();\n                const columnContent = document.getElementById('columnContent').value;\n\n                const newColumn = document.createElement('ul');\n                const columnNav = document.createElement('nav')\n\n                newColumn.className = 'dragColumn';\n                newColumn.id = `column-${Math.random()}`;\n\n                // Without handle: column can't be dragged\n                const handleBar = document.createElement('span');\n                handleBar.className = \"handle\";\n                columnNav.appendChild(handleBar);\n                const newDocPopup = document.createElement(\"button\")\n                newDocPopup.className = 'newDocPopupButton'\n                newDocPopup.dataset.column = newColumn.id\n                newDocPopup.addEventListener(\"click\",()=>createDocumentPopup(newDocPopup.dataset.column))\n                columnNav.appendChild(newDocPopup)\n                columnNav.classList.add(\"columnNav\")\n\n                const title = document.createElement('h1');\n                title.className ='title';\n                title.textContent = columnContent;\n                title.addEventListener(\"dblclick\",()=> edit(title))\n                columnNav.appendChild(title);\n                //the D in CRUD\n                const deleteMe = document.createElement(\"button\")\n                deleteMe.className = 'deleteButton'\n                deleteMe.dataset.column = newColumn.id\n                deleteMe.addEventListener(\"click\",()=>deleteDocument(deleteMe.dataset.column))\n                columnNav.appendChild(deleteMe)\n                \n                newColumn.appendChild(columnNav)\n                dragparent.appendChild(newColumn);\n                listOfColumn.push(newColumn);\n                createColumnForm.reset();\n\n                // Without this check: document form might appear with no columns\n               \n\n                    // Without dragula initialization: items within columns not draggable\n                    dragula(listOfColumn, {\n                        //with out the handl the column will try to move with the documents\n                        moves: function (el, container, handle) {\n                            return handle.classList.contains('bar')\n                        },\n                        //this must be here to keep the document from above the title.\n                        accepts: function(el, target, source, sibling){\n                           return !sibling || (!sibling.classList.contains('title')&& !sibling.classList.contains('handle'));\n                        },\n                        //this is important to how the dragula detects the drag.\n                        direction: 'vertical'\n                    })\n                //      if (document.querySelector('.dragColumn')) {\n                //     document.getElementById('createDocumentForm').removeAttribute(\"hidden\");});\n                // } else {\n                //     document.getElementById('createDocumentForm').setAttribute(\"hidden\");\n                // }\n            };\n\n            function createDocumentPopup(columnData){\n                console.log(columnData)\n                const theDocPopupForm =document.getElementById('createDocumentForm')\n                 theDocPopupForm.toggleAttribute(\"hidden\");\n                 const popupButton = document.getElementById('createDoc');\n                 popupButton.setAttribute('data-id', columnData);\n\n            }\n\n\n            function createDocumentFunc(event) {\n                event.preventDefault();\n                const columnID =document.getElementById(\"createDoc\").dataset.id\n                const documentLineItem = document.createElement('li');\n                documentLineItem.className = 'dragDocument';\n                documentLineItem.id = `id-${Math.random()}`\n\n                // Without bar class: document item not draggable\n                const handleBar = document.createElement('span');\n                handleBar.className = \"bar\";\n                // handleBar.textContent = '+';\n                documentLineItem.appendChild(handleBar);\n\n                const docTitle = document.createElement('h2');\n                const documentTitle = document.getElementById('documentTitle').value;\n                docTitle.textContent = documentTitle;\n                docTitle.addEventListener(\"dblclick\",()=> edit(docTitle))\n                documentLineItem.appendChild(docTitle);\n                \n                const docDescription = document.createElement('p');\n                const documentDescription = document.getElementById('documentDescription').value;\n                docDescription.textContent = documentTitle;\n                docDescription.addEventListener(\"dblclick\",()=> edit(docDescription))\n                documentLineItem.appendChild(docDescription);\n                \n                const docColumnList = document.qudocumentColumn\n                //the D in CRUD\n                const deleteMe = document.createElement(\"button\")\n                deleteMe.className = 'deleteButton'\n                deleteMe.dataset.document = documentLineItem.id\n                deleteMe.addEventListener(\"click\",()=>deleteDocument(deleteMe.dataset.document))\n                documentLineItem.appendChild(deleteMe)\n                // Without this selector: document not attached to DOM\n                const parentColumn = document.getElementById(`${columnID}`);\n                parentColumn.appendChild(documentLineItem);\n                createDocumentForm.reset();\n                createDocumentPopup(null)\n            }\n        }\n\n        // Without this initialization: columns not draggable\n        dragula([dragparent], {\n            moves: function (el, container, handle) {\n                return handle.classList.contains('handle');\n            }\n        });\n        function deleteDocument(docID){\n            theDoomedDocument = document.getElementById(docID)\n            if(theDoomedDocument){\n                theDoomedDocument.parentNode.removeChild(theDoomedDocument)\n            }\n        }\n        function edit(element){\n            let text = element.textContent\n            element.textContent = ''\n            const rewrite =document.createElement('input');\n            rewrite.classList.add('form-control');\n            rewrite.id = \"editInput\";\n            rewrite.type =\"textbox\";\n            rewrite.placeholder = text\n            rewrite.addEventListener(\"keydown\", function(event) {\n                if (event.key === \"Enter\") {\n                  event.preventDefault(); // the page would reload otherwise.\n                  console.log(rewrite.value||\"it's empty\")\n                  element.textContent = rewrite.value||rewrite.placeholder\n                  delete rewrite\n                }if (event.key === \"Escape\") {\n                    console.log('escape')\n                    element.textContent = text;\n                    rewrite.remove(); // Properly remove the input element from the DOM\n                }\n            })\n            rewrite.addEventListener(\"blur\",  function(event) {\n                element.textContent = text;\n                rewrite.remove(); // Properly remove the input element from the DOM\n            })\n            element.appendChild(rewrite).focus();\n        }\n    </script>\n  </body>\n</html>"
        }
    ]
}