{
    "sourceFile": "views/editProject.ejs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1740965566779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740965612164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,23 +3,37 @@\n <head>\n     <meta charset=\"UTF-8\">\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n     <title>Edit Project</title>\n+    <link rel=\"stylesheet\" href=\"/css/style.css\">\n </head>\n <body>\n     <h1>Edit Project</h1>\n-    <form action=\"/profile/project<%= project._id %>?_method=PUT\" method=\"POST\">\n-        <fieldset>\n+    <form action=\"/profile/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n+        <div class=\"form-group\">\n             <label for=\"name\">Project Name</label>\n-            <input type=\"text\" name=\"name\" id=\"name\" value=\"<%= project.name %>\" required>\n+            <input type=\"text\" name=\"name\" id=\"name\" value=\"<%= project.name %>\" class=\"form-control\" required>\n+        </div>\n+        <div class=\"form-group\">\n             <label for=\"description\">Description</label>\n-            <input type=\"text\" name=\"description\" id=\"description\" value=\"<%= project.description %>\" required>\n+            <textarea name=\"description\" id=\"description\" class=\"form-control\" required><%= project.description %></textarea>\n+        </div>\n+        <div class=\"form-group\">\n+            <label for=\"startDate\">Start Date</label>\n+            <input type=\"date\" name=\"startDate\" id=\"startDate\" value=\"<%= project.startDate.toISOString().split('T')[0] %>\" class=\"form-control\" required>\n+        </div>\n+        <div class=\"form-group\">\n+            <label for=\"endDate\">End Date</label>\n+            <input type=\"date\" name=\"endDate\" id=\"endDate\" value=\"<%= project.endDate.toISOString().split('T')[0] %>\" class=\"form-control\" required>\n+        </div>\n+        <div class=\"form-group\">\n             <label for=\"status\">Status</label>\n-            <select name=\"status\" id=\"status\" required>\n-                <option value=\"active\" <% if (project.status === 'active') { %> selected <% } %>>Active</option>\n-                <option value=\"inactive\" <% if (project.status === 'inactive') { %> selected <% } %>>Inactive</option>\n+            <select name=\"status\" id=\"status\" class=\"form-control\">\n+                <option value=\"Not Started\" <%= project.status === 'Not Started' ? 'selected' : '' %>>Not Started</option>\n+                <option value=\"In Progress\" <%= project.status === 'In Progress' ? 'selected' : '' %>>In Progress</option>\n+                <option value=\"Completed\" <%= project.status === 'Completed' ? 'selected' : '' %>>Completed</option>\n             </select>\n-            <button type=\"submit\">Update Project</button>\n-        </fieldset>\n+        </div>\n+        <button type=\"submit\" class=\"btn btn-primary\">Update Project</button>\n     </form>\n </body>\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740967728652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,6 +34,7 @@\n             </select>\n         </div>\n         <button type=\"submit\" class=\"btn btn-primary\">Update Project</button>\n     </form>\n+   \n </body>\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741021794497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,10 @@\n     <meta charset=\"UTF-8\">\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n     <title>Edit Project</title>\n     <link rel=\"stylesheet\" href=\"/css/style.css\">\n+    <!-- Font Awesome link for icons (if needed) -->\n+    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n </head>\n <body>\n     <h1>Edit Project</h1>\n     <form action=\"/profile/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n@@ -34,7 +36,6 @@\n             </select>\n         </div>\n         <button type=\"submit\" class=\"btn btn-primary\">Update Project</button>\n     </form>\n-   \n </body>\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741451580867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n </head>\n <body>\n     <h1>Edit Project</h1>\n-    <form action=\"/profile/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n+    <form id=\"editForm\" action=\"/profile/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n         <div class=\"form-group\">\n             <label for=\"name\">Project Name</label>\n             <input type=\"text\" name=\"name\" id=\"name\" value=\"<%= project.name %>\" class=\"form-control\" required>\n         </div>\n@@ -36,6 +36,31 @@\n             </select>\n         </div>\n         <button type=\"submit\" class=\"btn btn-primary\">Update Project</button>\n     </form>\n+\n+    <script>\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+            event.preventDefault();\n+            const form = event.target;\n+            const formData = new FormData(form);\n+            const action = form.action;\n+\n+            fetch(action, {\n+                method: 'POST',\n+                body: formData\n+            })\n+            .then(response => {\n+                if (response.ok) {\n+                    window.parent.postMessage('closeIframe', '*');\n+                } else {\n+                    alert('Failed to update project');\n+                }\n+            })\n+            .catch(error => {\n+                console.error('Error:', error);\n+                alert('Failed to update project');\n+            });\n+        });\n+    </script>\n </body>\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741453200867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,10 @@\n                 body: formData\n             })\n             .then(response => {\n                 if (response.ok) {\n-                    window.parent.postMessage('closeIframe', '*');\n+                    // Notify the parent page to refresh\n+                    window.parent.postMessage('closeIframe', window.location.origin);\n                 } else {\n                     alert('Failed to update project');\n                 }\n             })\n"
                },
                {
                    "date": 1741453451606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,10 @@\n     <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n </head>\n <body>\n     <h1>Edit Project</h1>\n-    <form id=\"editForm\" action=\"/profile/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n+    <form id=\"editForm\" action=\"/profile/project/<%= project._id %>\" method=\"POST\">\n+        <input type=\"hidden\" name=\"_method\" value=\"PUT\"> <!-- Method override for PUT -->\n         <div class=\"form-group\">\n             <label for=\"name\">Project Name</label>\n             <input type=\"text\" name=\"name\" id=\"name\" value=\"<%= project.name %>\" class=\"form-control\" required>\n         </div>\n@@ -45,10 +46,13 @@\n             const formData = new FormData(form);\n             const action = form.action;\n \n             fetch(action, {\n-                method: 'POST',\n-                body: formData\n+                method: 'POST', // Method override for PUT\n+                body: formData,\n+                headers: {\n+                    'X-HTTP-Method-Override': 'PUT' // Method override header\n+                }\n             })\n             .then(response => {\n                 if (response.ok) {\n                     // Notify the parent page to refresh\n"
                },
                {
                    "date": 1741453929748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n </head>\n <body>\n     <h1>Edit Project</h1>\n-    <form id=\"editForm\" action=\"/profile/project/<%= project._id %>\" method=\"POST\">\n+    <form id=\"editForm\" action=\"/profile/project/<%=projectList[i]._id %>\" method=\"POST\">\n         <input type=\"hidden\" name=\"_method\" value=\"PUT\"> <!-- Method override for PUT -->\n         <div class=\"form-group\">\n             <label for=\"name\">Project Name</label>\n             <input type=\"text\" name=\"name\" id=\"name\" value=\"<%= project.name %>\" class=\"form-control\" required>\n"
                },
                {
                    "date": 1741454100135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,9 @@\n     <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n </head>\n <body>\n     <h1>Edit Project</h1>\n-    <form id=\"editForm\" action=\"/profile/project/<%=projectList[i]._id %>\" method=\"POST\">\n-        <input type=\"hidden\" name=\"_method\" value=\"PUT\"> <!-- Method override for PUT -->\n+    <form id=\"editForm\" action=\"/profile/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n         <div class=\"form-group\">\n             <label for=\"name\">Project Name</label>\n             <input type=\"text\" name=\"name\" id=\"name\" value=\"<%= project.name %>\" class=\"form-control\" required>\n         </div>\n"
                },
                {
                    "date": 1741454270294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,10 @@\n     <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n </head>\n <body>\n     <h1>Edit Project</h1>\n-    <form id=\"editForm\" action=\"/profile/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n+    <form id=\"editForm\" action=\"/profile/project/<%= project._id %>\" method=\"POST\">\n+        <input type=\"hidden\" name=\"_method\" value=\"PUT\"> <!-- Method override for PUT -->\n         <div class=\"form-group\">\n             <label for=\"name\">Project Name</label>\n             <input type=\"text\" name=\"name\" id=\"name\" value=\"<%= project.name %>\" class=\"form-control\" required>\n         </div>\n"
                },
                {
                    "date": 1741454937769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,32 +40,786 @@\n     </form>\n \n     <script>\n         document.getElementById('editForm').addEventListener('submit', function(event) {\n-            event.preventDefault();\n-            const form = event.target;\n-            const formData = new FormData(form);\n-            const action = form.action;\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n \n-            fetch(action, {\n-                method: 'POST', // Method override for PUT\n-                body: formData,\n-                headers: {\n-                    'X-HTTP-Method-Override': 'PUT' // Method override header\n-                }\n-            })\n-            .then(response => {\n-                if (response.ok) {\n-                    // Notify the parent page to refresh\n-                    window.parent.postMessage('closeIframe', window.location.origin);\n-                } else {\n-                    alert('Failed to update project');\n-                }\n-            })\n-            .catch(error => {\n-                console.error('Error:', error);\n-                alert('Failed to update project');\n-            });\n-        });\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n+        document.getElementById('editForm').addEventListener('submit', function(event) {\n+  event.preventDefault();\n+  const form = event.target;\n+  const formData = new FormData(form);\n+  const action = form.action;\n+\n+  console.log('Action URL:', action); // Log the action URL\n+  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n+\n+  fetch(action, {\n+    method: 'POST',\n+    body: formData,\n+    headers: {\n+      'X-HTTP-Method-Override': 'PUT' // Method override header\n+    }\n+  })\n+  .then(response => {\n+    if (response.ok) {\n+      // Notify the parent page to refresh\n+      window.parent.postMessage('closeIframe', window.location.origin);\n+    } else {\n+      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n+      alert('Failed to update project');\n+    }\n+  })\n+  .catch(error => {\n+    console.error('Error:', error); // Log the error\n+    alert('Failed to update project');\n+  });\n+});\n     </script>\n </body>\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741455000434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,757 +69,7 @@\n     console.error('Error:', error); // Log the error\n     alert('Failed to update project');\n   });\n });\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n-\n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n     </script>\n </body>\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741457088177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,9 @@\n     <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n </head>\n <body>\n     <h1>Edit Project</h1>\n-    <form id=\"editForm\" action=\"/profile/project/<%= project._id %>\" method=\"POST\">\n-        <input type=\"hidden\" name=\"_method\" value=\"PUT\"> <!-- Method override for PUT -->\n+    <form action=\"/profile/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n         <div class=\"form-group\">\n             <label for=\"name\">Project Name</label>\n             <input type=\"text\" name=\"name\" id=\"name\" value=\"<%= project.name %>\" class=\"form-control\" required>\n         </div>\n@@ -37,39 +36,34 @@\n             </select>\n         </div>\n         <button type=\"submit\" class=\"btn btn-primary\">Update Project</button>\n     </form>\n-\n     <script>\n         document.getElementById('editForm').addEventListener('submit', function(event) {\n-  event.preventDefault();\n-  const form = event.target;\n-  const formData = new FormData(form);\n-  const action = form.action;\n+            event.preventDefault();\n+            const form = event.target;\n+            const formData = new FormData(form);\n+            const action = form.action;\n \n-  console.log('Action URL:', action); // Log the action URL\n-  console.log('Form Data:', Object.fromEntries(formData.entries())); // Log the form data\n-\n-  fetch(action, {\n-    method: 'POST',\n-    body: formData,\n-    headers: {\n-      'X-HTTP-Method-Override': 'PUT' // Method override header\n-    }\n-  })\n-  .then(response => {\n-    if (response.ok) {\n-      // Notify the parent page to refresh\n-      window.parent.postMessage('closeIframe', window.location.origin);\n-    } else {\n-      console.error('Failed to update project:', response.status, response.statusText); // Log the error\n-      alert('Failed to update project');\n-    }\n-  })\n-  .catch(error => {\n-    console.error('Error:', error); // Log the error\n-    alert('Failed to update project');\n-  });\n-});\n+            fetch(action, {\n+                method: 'POST', // Method override for PUT\n+                body: formData,\n+                headers: {\n+                    'X-HTTP-Method-Override': 'PUT' // Method override header\n+                }\n+            })\n+            .then(response => {\n+                if (response.ok) {\n+                    // Notify the parent page to refresh\n+                    window.parent.postMessage('closeIframe', window.location.origin);\n+                } else {\n+                    alert('Failed to update project');\n+                }\n+            })\n+            .catch(error => {\n+                console.error('Error:', error);\n+                alert('Failed to update project');\n+            });\n+        });\n     </script>\n </body>\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741457470019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,17 @@\n+<!-- editProject.ejs -->\n <!DOCTYPE html>\n <html lang=\"en\">\n <head>\n     <meta charset=\"UTF-8\">\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n     <title>Edit Project</title>\n     <link rel=\"stylesheet\" href=\"/css/style.css\">\n-    <!-- Font Awesome link for icons (if needed) -->\n     <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n </head>\n <body>\n     <h1>Edit Project</h1>\n-    <form action=\"/profile/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n+    <form id=\"editProjectForm\" action=\"/profile/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n         <div class=\"form-group\">\n             <label for=\"name\">Project Name</label>\n             <input type=\"text\" name=\"name\" id=\"name\" value=\"<%= project.name %>\" class=\"form-control\" required>\n         </div>\n@@ -37,33 +37,27 @@\n         </div>\n         <button type=\"submit\" class=\"btn btn-primary\">Update Project</button>\n     </form>\n     <script>\n-        document.getElementById('editForm').addEventListener('submit', function(event) {\n-            event.preventDefault();\n-            const form = event.target;\n-            const formData = new FormData(form);\n-            const action = form.action;\n-\n-            fetch(action, {\n-                method: 'POST', // Method override for PUT\n-                body: formData,\n-                headers: {\n-                    'X-HTTP-Method-Override': 'PUT' // Method override header\n-                }\n-            })\n-            .then(response => {\n-                if (response.ok) {\n-                    // Notify the parent page to refresh\n-                    window.parent.postMessage('closeIframe', window.location.origin);\n-                } else {\n-                    alert('Failed to update project');\n-                }\n-            })\n-            .catch(error => {\n-                console.error('Error:', error);\n-                alert('Failed to update project');\n-            });\n+      // Handle form submission within the iframe\n+      document.getElementById('editProjectForm').addEventListener('submit', function(event) {\n+        event.preventDefault();\n+        fetch(this.action, {\n+          method: 'POST',\n+          body: new FormData(this),\n+          headers: {\n+            'Accept': 'application/json'\n+          }\n+        })\n+        .then(response => response.json())\n+        .then(data => {\n+          if (data.success) {\n+            // Refresh the parent page to reflect changes\n+            window.parent.location.reload();\n+          } else {\n+            alert('Failed to update project');\n+          }\n         });\n+      });\n     </script>\n </body>\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741457479583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-<!-- editProject.ejs -->\n <!DOCTYPE html>\n <html lang=\"en\">\n <head>\n     <meta charset=\"UTF-8\">\n"
                },
                {
                    "date": 1741457753626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n     <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n </head>\n <body>\n     <h1>Edit Project</h1>\n-    <form id=\"editProjectForm\" action=\"/profile/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n+    <form id=\"editProjectForm\" action=\"/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n         <div class=\"form-group\">\n             <label for=\"name\">Project Name</label>\n             <input type=\"text\" name=\"name\" id=\"name\" value=\"<%= project.name %>\" class=\"form-control\" required>\n         </div>\n"
                },
                {
                    "date": 1741539495901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,13 +4,14 @@\n     <meta charset=\"UTF-8\">\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n     <title>Edit Project</title>\n     <link rel=\"stylesheet\" href=\"/css/style.css\">\n+    <!-- Font Awesome link for icons (if needed) -->\n     <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n </head>\n <body>\n     <h1>Edit Project</h1>\n-    <form id=\"editProjectForm\" action=\"/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n+    <form action=\"/profile/project/<%= project._id %>?_method=PUT\" method=\"POST\">\n         <div class=\"form-group\">\n             <label for=\"name\">Project Name</label>\n             <input type=\"text\" name=\"name\" id=\"name\" value=\"<%= project.name %>\" class=\"form-control\" required>\n         </div>\n@@ -35,28 +36,6 @@\n             </select>\n         </div>\n         <button type=\"submit\" class=\"btn btn-primary\">Update Project</button>\n     </form>\n-    <script>\n-      // Handle form submission within the iframe\n-      document.getElementById('editProjectForm').addEventListener('submit', function(event) {\n-        event.preventDefault();\n-        fetch(this.action, {\n-          method: 'POST',\n-          body: new FormData(this),\n-          headers: {\n-            'Accept': 'application/json'\n-          }\n-        })\n-        .then(response => response.json())\n-        .then(data => {\n-          if (data.success) {\n-            // Refresh the parent page to reflect changes\n-            window.parent.location.reload();\n-          } else {\n-            alert('Failed to update project');\n-          }\n-        });\n-      });\n-    </script>\n </body>\n </html>\n\\ No newline at end of file\n"
                }
            ],
            "date": 1740965566779,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Edit Project</title>\n</head>\n<body>\n    <h1>Edit Project</h1>\n    <form action=\"/profile/project<%= project._id %>?_method=PUT\" method=\"POST\">\n        <fieldset>\n            <label for=\"name\">Project Name</label>\n            <input type=\"text\" name=\"name\" id=\"name\" value=\"<%= project.name %>\" required>\n            <label for=\"description\">Description</label>\n            <input type=\"text\" name=\"description\" id=\"description\" value=\"<%= project.description %>\" required>\n            <label for=\"status\">Status</label>\n            <select name=\"status\" id=\"status\" required>\n                <option value=\"active\" <% if (project.status === 'active') { %> selected <% } %>>Active</option>\n                <option value=\"inactive\" <% if (project.status === 'inactive') { %> selected <% } %>>Inactive</option>\n            </select>\n            <button type=\"submit\">Update Project</button>\n        </fieldset>\n    </form>\n</body>\n</html>"
        }
    ]
}