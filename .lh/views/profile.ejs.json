{
    "sourceFile": "views/profile.ejs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1741898249661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1741898249661,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <!-- css link -->\n    <link rel=\"stylesheet\" href=\"/css/reset.css\" />\n    <link rel=\"stylesheet\" href=\"/css/style.css\" />\n    <!-- fonts link -->\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,400;0,700;0,900;1,400;1,700&display=swap\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap\" rel=\"stylesheet\">\n    <!-- Font Awesome link -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n    <title>User Profile</title>\n    <title>User Profile</title>\n    <style>\n        /* ... existing styles ... */\n        \n        .edit-btn {\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n            position: relative;\n            width: 30px;\n            height: 30px;\n            margin-left: 5px;\n            border: none;\n            background: none;\n            cursor: pointer;\n        }\n\n        .edit-btn i {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            font-size: 16px;\n            color: #666;\n        }\n\n        .edit-btn:hover i {\n            color: #333;\n        }\n\n        .project-list {\n            list-style: none;\n            padding: 0;\n            margin: 20px 0;\n        }\n\n        .project-item {\n            background: #fff;\n            border: 1px solid #ddd;\n            border-radius: 8px;\n            margin-bottom: 20px;\n            padding: 20px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n\n        .project-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 15px;\n            padding-bottom: 10px;\n            border-bottom: 1px solid #eee;\n        }\n\n        .project-header a {\n            font-size: 1.2em;\n            font-weight: bold;\n            color: #333;\n            text-decoration: none;\n        }\n\n        .project-actions {\n            display: flex;\n            gap: 10px;\n        }\n\n        .project-documents {\n            margin-top: 15px;\n        }\n\n        .document-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 10px;\n        }\n\n        .document-list {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n            gap: 15px;\n            padding: 10px 0;\n        }\n\n        .document-card {\n            background: #f8f9fa;\n            border: 1px solid #e9ecef;\n            border-radius: 6px;\n            padding: 15px;\n            position: relative;\n        }\n\n        .document-card h4 {\n            margin: 0 0 10px 0;\n            font-weight: bold;\n        }\n\n        .document-card p {\n            margin: 0;\n            color: #666;\n            font-size: 0.9em;\n        }\n\n        .document-actions {\n            display: flex;\n            gap: 8px;\n            margin-top: 10px;\n        }\n\n        .add-document-btn {\n            background: #007bff;\n            color: white;\n            border: none;\n            border-radius: 4px;\n            padding: 8px 12px;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            gap: 5px;\n        }\n\n        .add-document-btn:hover {\n            background: #0056b3;\n        }\n    </style>\n  </head>\n  <body>\n    <!-- header -->\n    <%- include('partials/header') %>\n    <h1>Adjust your profile here</h1>\n    <a href=\"/\">To index Page</a>\n    <section class=\"hero\">\n      <form action=\"/project/createProject\" method=\"POST\">\n        <div class=\"form-group\">\n          <label for=\"name\">Project Name</label>\n          <input type=\"text\" name=\"name\" id=\"name\" class=\"form-control\" required>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"description\">Description</label>\n          <textarea name=\"description\" id=\"description\" class=\"form-control\" required></textarea>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"startDate\">Start Date</label>\n          <input type=\"date\" name=\"startDate\" id=\"startDate\" class=\"form-control\" required>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"endDate\">End Date</label>\n          <input type=\"date\" name=\"endDate\" id=\"endDate\" class=\"form-control\" required>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"status\">Status</label>\n          <select name=\"status\" id=\"status\" class=\"form-control\">\n            <option value=\"Not Started\">Not Started</option>\n            <option value=\"In Progress\">In Progress</option>\n            <option value=\"Completed\">Completed</option>\n          </select>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Create Project</button>\n      </form>\n      <ul class=\"project-list\">\n        <% if (typeof projectList !== 'undefined' && projectList.length > 0) { %>\n            <% projectList.forEach(project => { %>\n                <li class=\"project-item\">\n                    <div class=\"project-header\">\n                        <a href=\"/project/<%= project._id %>\"><%= project.name %></a>\n                        <div class=\"project-actions\">\n                            <button class=\"delete-btn\" data-id=\"<%= project._id %>\">\n                                <i class=\"fas fa-trash-alt\"></i> \n                            </button>\n                            <a href=\"/profile/project/<%= project._id %>/edit\" class=\"edit-btn\">\n                                <i class=\"fas fa-edit\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    \n                    <div class=\"project-details\">\n                        <p><strong>Status:</strong> <%= project.status %></p>\n                        <p><strong>Columns:</strong> <%= project.columns ? project.columns.length : 0 %></p>\n                        <p><strong>Documents:</strong> <%= project.columns ? project.columns.reduce((sum, col) => sum + (col.documents ? col.documents.length : 0), 0) : 0 %></p>\n                    </div>\n                </li>\n            <% }) %>\n        <% } else { %>\n            <li>No projects found</li>\n        <% } %>\n      </ul>\n    </section>\n    <!-- Add Modal HTML -->\n    <div id=\"editModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\">&times;</span>\n        <form id=\"editProjectForm\">\n          <div class=\"form-group\">\n            <label for=\"editName\">Project Name</label>\n            <input type=\"text\" name=\"name\" id=\"editName\" class=\"form-control\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"editDescription\">Description</label>\n            <textarea name=\"description\" id=\"editDescription\" class=\"form-control\" required></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"editStartDate\">Start Date</label>\n            <input type=\"date\" name=\"startDate\" id=\"editStartDate\" class=\"form-control\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"editEndDate\">End Date</label>\n            <input type=\"date\" name=\"endDate\" id=\"editEndDate\" class=\"form-control\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"editStatus\">Status</label>\n            <select name=\"status\" id=\"editStatus\" class=\"form-control\">\n              <option value=\"Not Started\">Not Started</option>\n              <option value=\"In Progress\">In Progress</option>\n              <option value=\"Completed\">Completed</option>\n            </select>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">Update Project</button>\n        </form>\n      </div>\n    </div>\n    <!-- Add Document Modal -->\n    <div id=\"addDocumentModal\" class=\"modal\">\n        <div class=\"modal-content\">\n            <span class=\"close\">&times;</span>\n            <form id=\"addDocumentForm\">\n                <div class=\"form-group\">\n                    <label for=\"documentTitle\">Title</label>\n                    <input type=\"text\" id=\"documentTitle\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"documentContent\">Content</label>\n                    <textarea id=\"documentContent\" required></textarea>\n                </div>\n                <button type=\"submit\">Add Document</button>\n            </form>\n        </div>\n    </div>\n    <footer>\n      all thanks goes to the 100devs\n    </footer>\n    <script>\n      document.addEventListener('DOMContentLoaded', function() {\n        const modal = document.getElementById('editModal');\n        const span = document.getElementsByClassName('close')[0];\n        const editProjectForm = document.getElementById('editProjectForm');\n        let currentProjectId = null;\n\n        // Delete project functionality\n        const deleteButtons = document.querySelectorAll('.delete-btn');\n        deleteButtons.forEach(button => {\n          button.addEventListener('click', function(event) {\n            const projectId = event.target.closest('button').getAttribute('data-id');\n            fetch(`/profile/project/${projectId}/delete`, {\n              method: 'DELETE'\n            })\n            .then(response => response.json())\n            .then(data => {\n              if (data.success) {\n                window.location.reload();\n              } else {\n                alert('Failed to delete project');\n              }\n            });\n          });\n        });\n\n        // Edit project functionality\n        const editButtons = document.querySelectorAll('.edit-btn');\n        editButtons.forEach(button => {\n          button.addEventListener('click', async function(event) {\n            event.preventDefault();\n            const projectId = this.getAttribute('href').split('/edit')[0].split('project/')[1];\n            currentProjectId = projectId;\n            \n            // Fetch project data\n            const response = await fetch(`/profile/project/${projectId}/data`);\n            const project = await response.json();\n            \n            // Populate form\n            document.getElementById('editName').value = project.name;\n            document.getElementById('editDescription').value = project.description;\n            document.getElementById('editStartDate').value = project.startDate.split('T')[0];\n            document.getElementById('editEndDate').value = project.endDate.split('T')[0];\n            document.getElementById('editStatus').value = project.status;\n            \n            // Show modal\n            modal.style.display = 'block';\n          });\n        });\n\n        // Close modal when clicking (x)\n        span.onclick = function() {\n          modal.style.display = 'none';\n        }\n\n        // Get all modals\n        const editModal = document.getElementById('editModal');\n        const addDocumentModal = document.getElementById('addDocumentModal');\n        \n        // Function to close modal and reset form\n        function closeModal(modal) {\n            modal.style.display = 'none';\n            if(modal === addDocumentModal) {\n                // Reset form fields\n                document.getElementById('documentTitle').value = '';\n                document.getElementById('documentContent').value = '';\n            }\n        }\n\n        // Close modal when clicking outside\n        window.addEventListener('click', function(event) {\n            if (event.target === editModal) {\n                closeModal(editModal);\n            }\n            if (event.target === addDocumentModal) {\n                closeModal(addDocumentModal);\n            }\n        });\n\n        // Close modal when pressing Escape key\n        document.addEventListener('keydown', function(event) {\n            if (event.key === 'Escape') {\n                if (editModal.style.display === 'block') {\n                    closeModal(editModal);\n                }\n                if (addDocumentModal.style.display === 'block') {\n                    closeModal(addDocumentModal);\n                }\n            }\n        });\n\n        // Close button functionality\n        document.querySelectorAll('.close').forEach(closeBtn => {\n            closeBtn.addEventListener('click', function() {\n                const modal = this.closest('.modal');\n                closeModal(modal);\n            });\n        });\n\n        // Handle form submission\n        editProjectForm.addEventListener('submit', async function(event) {\n          event.preventDefault();\n          \n          const formData = {\n            name: document.getElementById('editName').value,\n            description: document.getElementById('editDescription').value,\n            startDate: document.getElementById('editStartDate').value,\n            endDate: document.getElementById('editEndDate').value,\n            status: document.getElementById('editStatus').value\n          };\n\n          try {\n            const response = await fetch(`/profile/project/${currentProjectId}?_method=PUT`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(formData)\n            });\n\n            if (response.ok) {\n              window.location.reload();\n            } else {\n              alert('Failed to update project');\n            }\n          } catch (error) {\n            console.error('Error:', error);\n            alert('Failed to update project');\n          }\n        });\n\n        let currentColumnId = null;\n\n        function showAddDocumentModal(projectId) {\n            currentColumnId = projectId;\n            const modal = document.getElementById('addDocumentModal');\n            modal.style.display = 'block';\n        }\n\n        // Load documents for each project\n        async function loadDocuments(projectId) {\n            try {\n                const response = await fetch(`/profile/project/${projectId}/documents`);\n                const documents = await response.json();\n                const documentList = document.getElementById(`documentList-${projectId}`);\n                \n                documentList.innerHTML = documents.map(doc => `\n                    <div class=\"document-card\" draggable=\"true\" data-id=\"${doc._id}\">\n                        <h4>${doc.title}</h4>\n                        <p>${doc.content}</p>\n                        <div class=\"document-actions\">\n                            <button onclick=\"editDocument('${doc._id}')\">Edit</button>\n                            <button onclick=\"deleteDocument('${doc._id}')\">Delete</button>\n                        </div>\n                    </div>\n                `).join('');\n                \n                // Add drag and drop functionality\n                setupDragAndDrop();\n            } catch (error) {\n                console.error('Error loading documents:', error);\n            }\n        }\n\n        // Initialize drag and drop\n        function setupDragAndDrop() {\n            const documents = document.querySelectorAll('.document-card');\n            const columns = document.querySelectorAll('.document-column');\n            \n            documents.forEach(doc => {\n                doc.addEventListener('dragstart', handleDragStart);\n                doc.addEventListener('dragend', handleDragEnd);\n            });\n            \n            columns.forEach(column => {\n                column.addEventListener('dragover', handleDragOver);\n                column.addEventListener('drop', handleDrop);\n            });\n        }\n\n        // Add document form submission\n        document.getElementById('addDocumentForm').addEventListener('submit', async (e) => {\n            e.preventDefault();\n            \n            const title = document.getElementById('documentTitle').value;\n            const content = document.getElementById('documentContent').value;\n            \n            try {\n                const response = await fetch(`/profile/project/${currentColumnId}/document`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ title, content, columnId: currentColumnId })\n                });\n                \n                if (response.ok) {\n                    document.getElementById('addDocumentModal').style.display = 'none';\n                    loadDocuments(currentColumnId);\n                }\n            } catch (error) {\n                console.error('Error adding document:', error);\n            }\n        });\n\n        // Load documents for all projects on page load\n        document.addEventListener('DOMContentLoaded', () => {\n            const projects = document.querySelectorAll('[data-project-id]');\n            projects.forEach(project => {\n                loadDocuments(project.dataset.projectId);\n            });\n        });\n\n        // Get the add document modal\n        const addDocumentModal = document.getElementById('addDocumentModal');\n\n        // Close modal when clicking outside\n        window.addEventListener('click', function(event) {\n            if (event.target === addDocumentModal) {\n                addDocumentModal.style.display = 'none';\n                // Clear form fields\n                document.getElementById('documentTitle').value = '';\n                document.getElementById('documentContent').value = '';\n            }\n        });\n\n        // Close modal with Escape key\n        document.addEventListener('keydown', function(event) {\n            if (event.key === 'Escape' && addDocumentModal.style.display === 'block') {\n                addDocumentModal.style.display = 'none';\n                // Clear form fields\n                document.getElementById('documentTitle').value = '';\n                document.getElementById('documentContent').value = '';\n            }\n        });\n\n        // Make sure the close button (×) works\n        const closeBtn = addDocumentModal.querySelector('.close');\n        closeBtn.addEventListener('click', function() {\n            addDocumentModal.style.display = 'none';\n            // Clear form fields\n            document.getElementById('documentTitle').value = '';\n            document.getElementById('documentContent').value = '';\n        });\n\n        // In your form submission handler\n        document.querySelector('form[action=\"/project/createProject\"]').addEventListener('submit', async (e) => {\n            e.preventDefault();\n            \n            const formData = {\n                name: document.getElementById('name').value,\n                description: document.getElementById('description').value,\n                startDate: document.getElementById('startDate').value,\n                endDate: document.getElementById('endDate').value,\n                status: document.getElementById('status').value,\n                columns: [] // Initialize empty columns array\n            };\n\n            try {\n                const response = await fetch('/project/createProject', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(formData)\n                });\n\n                if (response.ok) {\n                    window.location.reload();\n                }\n            } catch (error) {\n                console.error('Error:', error);\n            }\n        });\n      });\n    </script>\n  </body>\n</html> "
        }
    ]
}