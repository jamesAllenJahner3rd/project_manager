{
    "sourceFile": "server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1740967528539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740967578718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,9 @@\n app.use('/profile', profileRoutes);\n app.use('/login', loginRoutes);\n app.use('/post', postRoutes);\n app.use('/project', projectRoutes);\n+app.use('/profile', require('./routes/profileRoutes'));\n \n // Error Handling Middleware\n app.use(notFound);\n app.use(errorHandler);\n"
                },
                {
                    "date": 1741453533534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,21 @@\n app.use('/profile', profileRoutes);\n app.use('/login', loginRoutes);\n app.use('/post', postRoutes);\n app.use('/project', projectRoutes);\n-app.use('/profile', require('./routes/profileRoutes'));\n+app.post('/profile/project/:id', (req, res) => {\n+    const projectId = req.params.id;\n+    const updatedData = req.body;\n+  \n+    // Update the project in the database\n+    Project.findByIdAndUpdate(projectId, updatedData, { new: true })\n+      .then(project => {\n+        res.json({ success: true });\n+      })\n+      .catch(err => {\n+        res.status(500).json({ success: false, error: err.message });\n+      });\n+  });\n \n // Error Handling Middleware\n app.use(notFound);\n app.use(errorHandler);\n"
                },
                {
                    "date": 1741454706433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,10 @@\n \n if (process.env.NODE_ENV ==='development'){\n     app. use(morgan('dev'))\n }\n+// Project Model\n+const Project = require('./models/Project');\n \n // Middleware\n app.use(express.urlencoded({ extended: true }));\n app.use(express.json());\n"
                },
                {
                    "date": 1741454735454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,48 +4,44 @@\n const dotenv = require('dotenv');\n const session = require('express-session');\n const MongoStore = require('connect-mongo');\n const passport = require('passport');\n-// const dragula = require(\"dragula\");\n+const morgan = require('morgan');\n+const ejs = require('ejs');\n+const path = require('path');\n \n const indexRoutes = require('./routes/indexRoutes');\n const profileRoutes = require('./routes/profileRoutes');\n const loginRoutes = require('./routes/loginRoutes');\n const postRoutes = require('./routes/postRoutes');\n const projectRoutes = require('./routes/projectRoutes');\n-const { notFound, errorHandler } = require('./middleware/errorMiddleware'); \n+const authRoutes = require('./routes/auth');\n+const { notFound, errorHandler } = require('./middleware/errorMiddleware');\n \n-const morgan = require('morgan')\n-const connectDB = require(\"./config/database\");\n-const ejs =require(\"ejs\");\n+const Project = require('./models/Project'); // Import the Project model\n \n-\n-const authRoutes = require(\"./routes/auth\");\n-const path = require(\"path\");\n-// load the config\n+// Load the config\n dotenv.config({ path: './config/.env' });\n \n-//Passport config\n-require(\"./config/passport\")(passport)//i'm passing variable passport as an arguement\n+// Passport config\n+require('./config/passport')(passport);\n \n+// Connect to the database\n connectDB();\n \n const app = express();\n-const PORT = process.env.PORT ||  8000;\n+const PORT = process.env.PORT || 8000;\n \n-\n-if (process.env.NODE_ENV ==='development'){\n-    app. use(morgan('dev'))\n+if (process.env.NODE_ENV === 'development') {\n+    app.use(morgan('dev'));\n }\n-// Project Model\n-const Project = require('./models/Project');\n \n // Middleware\n app.use(express.urlencoded({ extended: true }));\n app.use(express.json());\n app.use(methodOverride('_method'));\n app.use('/public', express.static('public'));\n- \n+\n // Log each request to see the flow\n app.use((req, res, next) => {\n     console.log(`${req.method} ${req.url}`);\n     next();\n@@ -53,57 +49,59 @@\n \n // View engine\n app.set('view engine', 'ejs');\n \n-//Express-session middleware\n+// Express-session middleware\n app.use(\n     session({\n-      secret: 'keyboard cat',\n-      resave: false,\n-      saveUninitialized: false,\n-      //this was stoping us from being logged in as true\n-      cookie: { secure: false },\n-      //this was required do to an updated module\n-      store: MongoStore.create({ mongoUrl: process.env.DB_STRING  }),\n+        secret: 'keyboard cat',\n+        resave: false,\n+        saveUninitialized: false,\n+        cookie: { secure: false },\n+        store: MongoStore.create({ mongoUrl: process.env.DB_STRING }),\n     })\n );\n \n // Passport middleware\n app.use(passport.initialize());\n app.use(passport.session());\n+\n // Add this middleware before your route definitions\n-//the partials weren't recieving the to isAuthenticated.\n app.use((req, res, next) => {\n     res.locals.isAuthenticated = req.isAuthenticated();\n     next();\n });\n \n-//static folder\n-app.use(express.static(path.join(__dirname,\"public\")));\n+// Static folder\n+app.use(express.static(path.join(__dirname, 'public')));\n \n // Routes\n app.use('/', indexRoutes);\n-app.use('/auth',authRoutes);\n+app.use('/auth', authRoutes);\n app.use('/profile', profileRoutes);\n app.use('/login', loginRoutes);\n app.use('/post', postRoutes);\n-app.use('/project', projectRoutes);\n+\n+// Add the PUT route here\n app.post('/profile/project/:id', (req, res) => {\n     const projectId = req.params.id;\n     const updatedData = req.body;\n-  \n+\n     // Update the project in the database\n     Project.findByIdAndUpdate(projectId, updatedData, { new: true })\n-      .then(project => {\n-        res.json({ success: true });\n-      })\n-      .catch(err => {\n-        res.status(500).json({ success: false, error: err.message });\n-      });\n-  });\n+        .then(project => {\n+            res.json({ success: true });\n+        })\n+        .catch(err => {\n+            res.status(500).json({ success: false, error: err.message });\n+        });\n+});\n \n+// Use project routes\n+app.use('/project', projectRoutes);\n+\n // Error Handling Middleware\n app.use(notFound);\n app.use(errorHandler);\n \n-//NODE_ENV is going to let us know what stage of development we're in when booting.\n+// Start the server\n app.listen(PORT, console.log(`Server running in ${process.env.NODE_ENV} mode on port ${PORT}`));\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741455408888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,9 @@\n app.use('/auth', authRoutes);\n app.use('/profile', profileRoutes);\n app.use('/login', loginRoutes);\n app.use('/post', postRoutes);\n+app.use('/', projectRoutes);\n \n // Add the PUT route here\n app.post('/profile/project/:id', (req, res) => {\n     const projectId = req.params.id;\n@@ -95,10 +96,8 @@\n             res.status(500).json({ success: false, error: err.message });\n         });\n });\n \n-// Use project routes\n-app.use('/project', projectRoutes);\n \n // Error Handling Middleware\n app.use(notFound);\n app.use(errorHandler);\n"
                },
                {
                    "date": 1741455603852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,8 @@\n app.use('/auth', authRoutes);\n app.use('/profile', profileRoutes);\n app.use('/login', loginRoutes);\n app.use('/post', postRoutes);\n-app.use('/', projectRoutes);\n \n // Add the PUT route here\n app.post('/profile/project/:id', (req, res) => {\n     const projectId = req.params.id;\n@@ -96,8 +95,10 @@\n             res.status(500).json({ success: false, error: err.message });\n         });\n });\n \n+// Use project routes\n+app.use('/', projectRoutes);\n \n // Error Handling Middleware\n app.use(notFound);\n app.use(errorHandler);\n"
                },
                {
                    "date": 1741455716932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n const passport = require('passport');\n const morgan = require('morgan');\n const ejs = require('ejs');\n const path = require('path');\n+const connectDB = require('./config/db');\n \n const indexRoutes = require('./routes/indexRoutes');\n const profileRoutes = require('./routes/profileRoutes');\n const loginRoutes = require('./routes/loginRoutes');\n"
                },
                {
                    "date": 1741455743363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n const passport = require('passport');\n const morgan = require('morgan');\n const ejs = require('ejs');\n const path = require('path');\n-const connectDB = require('./config/db');\n+const connectDB = require('./config/database');\n \n const indexRoutes = require('./routes/indexRoutes');\n const profileRoutes = require('./routes/profileRoutes');\n const loginRoutes = require('./routes/loginRoutes');\n"
                }
            ],
            "date": 1740967528539,
            "name": "Commit-0",
            "content": "const express = require('express');\nconst mongoose = require('mongoose');\nconst methodOverride = require('method-override');\nconst dotenv = require('dotenv');\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo');\nconst passport = require('passport');\n// const dragula = require(\"dragula\");\n\nconst indexRoutes = require('./routes/indexRoutes');\nconst profileRoutes = require('./routes/profileRoutes');\nconst loginRoutes = require('./routes/loginRoutes');\nconst postRoutes = require('./routes/postRoutes');\nconst projectRoutes = require('./routes/projectRoutes');\nconst { notFound, errorHandler } = require('./middleware/errorMiddleware'); \n\nconst morgan = require('morgan')\nconst connectDB = require(\"./config/database\");\nconst ejs =require(\"ejs\");\n\n\nconst authRoutes = require(\"./routes/auth\");\nconst path = require(\"path\");\n// load the config\ndotenv.config({ path: './config/.env' });\n\n//Passport config\nrequire(\"./config/passport\")(passport)//i'm passing variable passport as an arguement\n\nconnectDB();\n\nconst app = express();\nconst PORT = process.env.PORT ||  8000;\n\n\nif (process.env.NODE_ENV ==='development'){\n    app. use(morgan('dev'))\n}\n\n// Middleware\napp.use(express.urlencoded({ extended: true }));\napp.use(express.json());\napp.use(methodOverride('_method'));\napp.use('/public', express.static('public'));\n \n// Log each request to see the flow\napp.use((req, res, next) => {\n    console.log(`${req.method} ${req.url}`);\n    next();\n});\n\n// View engine\napp.set('view engine', 'ejs');\n\n//Express-session middleware\napp.use(\n    session({\n      secret: 'keyboard cat',\n      resave: false,\n      saveUninitialized: false,\n      //this was stoping us from being logged in as true\n      cookie: { secure: false },\n      //this was required do to an updated module\n      store: MongoStore.create({ mongoUrl: process.env.DB_STRING  }),\n    })\n);\n\n// Passport middleware\napp.use(passport.initialize());\napp.use(passport.session());\n// Add this middleware before your route definitions\n//the partials weren't recieving the to isAuthenticated.\napp.use((req, res, next) => {\n    res.locals.isAuthenticated = req.isAuthenticated();\n    next();\n});\n\n//static folder\napp.use(express.static(path.join(__dirname,\"public\")));\n\n// Routes\napp.use('/', indexRoutes);\napp.use('/auth',authRoutes);\napp.use('/profile', profileRoutes);\napp.use('/login', loginRoutes);\napp.use('/post', postRoutes);\napp.use('/project', projectRoutes);\n\n// Error Handling Middleware\napp.use(notFound);\napp.use(errorHandler);\n\n//NODE_ENV is going to let us know what stage of development we're in when booting.\napp.listen(PORT, console.log(`Server running in ${process.env.NODE_ENV} mode on port ${PORT}`));"
        }
    ]
}