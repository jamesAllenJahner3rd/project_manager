{
    "sourceFile": "routes/profile.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1741911427334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1741911427334,
            "name": "Commit-0",
            "content": "router.get('/', ensureAuth, async (req, res) => {\n    try {\n        // Get all projects with their columns and documents\n        const projectList = await Project.find({ adminId: req.user._id })\n            .populate({\n                path: 'columns',\n                populate: {\n                    path: 'documents',\n                    options: { sort: { 'position': 1 } }\n                }\n            })\n            .lean();\n\n        res.render('profile', {\n            projectList,\n            user: req.user\n        });\n    } catch (err) {\n        console.error(err);\n        res.render('error/500');\n    }\n});\n\n// Add a route to get project data\nrouter.get('/project/:id/data', ensureAuth, async (req, res) => {\n    try {\n        const project = await Project.findById(req.params.id)\n            .populate({\n                path: 'columns',\n                populate: {\n                    path: 'documents',\n                    options: { sort: { 'position': 1 } }\n                }\n            });\n        res.json(project);\n    } catch (err) {\n        res.status(500).json({ error: err.message });\n    }\n});\n\n// Update project route\nrouter.put('/project/:id', async (req, res) => {\n    try {\n        // Only select the fields we want to update\n        const updateData = {\n            name: req.body.name,\n            description: req.body.description,\n            startDate: req.body.startDate,\n            endDate: req.body.endDate,\n            status: req.body.status\n        };\n\n        // Use findByIdAndUpdate with specific options\n        const updatedProject = await Project.findByIdAndUpdate(\n            req.params.id,\n            { $set: updateData },\n            { \n                new: true, // Return the updated document\n                runValidators: true, // Run model validations\n                select: 'name description startDate endDate status' // Only return these fields\n            }\n        );\n\n        if (!updatedProject) {\n            return res.status(404).json({ error: 'Project not found' });\n        }\n\n        res.json(updatedProject);\n    } catch (error) {\n        console.error('Error updating project:', error);\n        res.status(500).json({ error: 'Error updating project' });\n    }\n}); "
        }
    ]
}