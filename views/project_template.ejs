<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- css link -->
    <link rel="stylesheet" href="/css/reset.css" />
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/dragula.css"/>
    <!-- fonts link -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,400;0,700;0,900;1,400;1,700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    
    <title>Project Template</title>
    <style>
        .drag-container {
            display: flex;
            flex-wrap: wrap;
            height: 100vh;
            overflow-y: auto;
        }
        .dragthing {
            border: 1px solid #ccc;
            padding: 10px;
            background-color: #f9f9f9;
            box-sizing: border-box; 
            word-wrap: break-word; 
            margin: 0; 
            flex: 1 0 25%; 
        }
    </style>
  </head>

  <body onload="init()">
    <!-- header -->
    <%- include('partials/header') %>

    <!-- Form to create new columns -->
    <form id="createColumnForm">
        <div class="form-group">
            <label for="columnContent">Column Content</label>
            <input type="text" id="columnContent" class="form-control" required>
        </div>
        <button type="submit" class="btn btn-primary">Create Column</button>
    </form>
    <form id= "createDocumentForm" hidden>
        <h2> Create Document</h2>
        <div class="form-group"  >
            <label for="documentTitle">Document Title</label>
            <input type="text" id="documentTitle" class="form-control" required>
            <input type="button" id="documentColumn" class="form-control" value="Column" >
            <label for="documentDescription">Document Description</label>
            <input type="textbox" id="documentDescription" class="form-control">
            
            <input type="button" id="documentAssignee" class="form-control" value="Assignee" >
            <input type="button" id="documentLabel" class="form-control" value="Label" >
            <input type="button" id="documentProject" class="form-control" value="Assign to Project" >
            <input type="button" id="MileStone" class="form-control" value="MileStone" >
        </div>
        <button type="submit" class="btn btn-primary" id='createDoc'>Create Document</button>

    </form>
    <!-- Container for the columns -->
    <div id="dragparent" class="drag-container">
        <!-- Existing columns can be added here if needed -->
    </div>

    <!-- footer -->
    <%- include('partials/footer') %>
    <script src="/js/main.js"></script>
    <script src="/js/dragula.js"></script>

    <script>
        function init() {
            const createColumnForm = document.getElementById('createColumnForm');
            const dragparent = document.getElementById('dragparent');
            const dragchild = document.getElementById('dragchild');
            ///
             const createDocumentForm = document.getElementById('createDocumentForm');
             createDocumentForm.addEventListener('submit', createDocumentFunc)
///
            createColumnForm.addEventListener('submit', function(event) {
                event.preventDefault();
                const columnContent = document.getElementById('columnContent').value;
                const newColumn = document.createElement('ul');
                const addDocumentButton = document.createElement('button');
                newColumn.className = 'dragthing';
                newColumn.id = `column-${columnContent.toLowerCase().replace(/ /g, '')}`;
                newColumn.textContent = columnContent;
                dragparent.appendChild(newColumn);
                createColumnForm.reset();
                if (document.querySelector('.dragthing')){
                    document.getElementById('createDocumentForm').removeAttribute("hidden")
                }else{
                    document.getElementById('createDocumentForm').setAttribute("hidden")
                }
                
            });
            function createDocumentFunc(event){
                event.preventDefault();
                const documentContent = document.getElementById('documentTitle').value;
                const documentLineItem = document.createElement('li');
                const addDocumentButton = document.createElement('button');
                
// test parent element.     `
                const parentColumn = document.querySelector('#dragparent ul:first-child')
                documentLineItem.className = 'dragDocument';
                documentLineItem.textContent = documentContent
              //  console.log(parentColumn.id)
                //documentLineItem.id = `column-${parentColumn.id.toLowerCase().replace(/ /g, '')}-${documentLineItem.textContent.toLowerCase().replace(/ /g, '')}`;
                
                parentColumn.appendChild(documentLineItem);
                createDocumentForm.reset();
            }
            dragula([dragparent]);
        }
    </script>
  </body>
</html>