<!DOCTYPE html>
<html lang="en">
<style>
    fieldset.column {
        margin: auto;
        flex-direction: column;
        flex: 1;
        display: flex;

    }

    #chat-box {
        display: flex;
        /* height: 100%; */
        flex-direction: column;
        position: relative;
        flex: 2;
        border: 1px solid var(--gray);
        margin: 0;
        background: var(--white);
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    #chat-box fieldset {
        display: flex;
        width: 100%;
        flex-direction: row;
        border: none;
        padding: 1rem;
    }

    #chat-box fieldset label {
        display: flex;
        flex: 0;
        width: 100%;
        flex-direction: row;
        font-size: 1.1rem;
        color: var(--dark-red);
        font-weight: 600;
    }

    #chat-box fieldset form {
        display: flex;
        width: 100%;
        flex-direction: row;
        gap: 0.5rem;
        align-items: center;
    }

    #chat-box fieldset form input {
        display: flex;
        flex: 3;
        width: 75%;
        padding: 1.5rem;
        border: 1px solid var(--gray);
        border-radius: 6px;
        font-size: 1.2rem;
        transition: border-color 0.3s ease;
        min-height: 3.5rem;
    }

    #chat-box fieldset form input:focus {
        outline: none;
        border-color: var(--dark-red);
        box-shadow: 0 0 0 2px rgba(73, 19, 19, 0.1);
    }

    #chat-box fieldset form button {
        display: flex;
        flex: 1;
        width: 25%;
        align-items: center;
        justify-content: center;
        padding: 0.25rem 0.5rem;
        background: var(--dark-red);
        color: var(--white);
        border: none;
        border-radius: 6px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        height: 2rem;
        font-size: 0.9rem;
    }

    #chat-box fieldset form button:hover {
        background: var(--red);
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    #message-container {
        flex: 1;
        margin: 1rem;
        padding: 1rem;
        border: 1px solid var(--gray);
        border-radius: 6px;
        overflow-y: auto;
        background: var(--white);
    }

    #message-container div {
        padding: 0.75rem;
        margin-bottom: 0.5rem;
        background: var(--white);
        border-radius: 6px;
        border: 1px solid var(--gray);
        transition: all 0.3s ease;
    }

    #message-container div:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    section.project-layout form.project-button {
        margin: 10%;
    }

    .crosswise {
        display: flex;
        flex: 1;
        /* Makes #chat-messages take up remaining space */
        margin: 1% 1% 1% 1%;
        width: 98%;
        border: 3px solid black;
        overflow-y: auto;
        flex-direction: row;

    }
</style>

<body>
    <aside id='chat-box'>
        <h2>Chat</h2>
        <section id="message-container">
        </section>
        <fieldset>
            <form id="chatForm">
                <label for="message">
                    Message
                </label>
                <input type="text" id='message-input' placeholder="Type your message...">
                <button type='submit' class='btn-primary'>Send</button>
            </form>
        </fieldset>
    </aside>
    <script src="/js/socket.io.js"></script>
    <!-- this what have to be it's own script. -->
    <script type="module">

        const messageInput = document.getElementById("message-input");
        const chatForm = document.getElementById("chatForm");
        const socket = io('http://localhost:3000')
        const room = "chat<%= project._id %>";
         console.log('<%- JSON.stringify(project) %>');
        // const project = JSON.parse('<%- JSON.stringify(project) %>');
        // console.log(project);
        // console.log({"columns":[],"_id":"67a1b983250ece3eb3b2e11f","name":"another","description":"testtest"  });
       

        const roomName = "<%= project.name %>";
        console.log("roomName", roomName, "room", room)
        socket.on('connect', () => {

            displayMessage(`You connected to ${roomName}`);
            console.log(`Client side: User connected ${roomName}`);
        });
        document.addEventListener("DOMContentLoaded", () => {
            console.log('join-room', roomName, room);
            socket.emit('join-room', roomName, room);
        });
        socket.on('recieve-message', message => displayMessage(message));
        chatForm.addEventListener("submit", e => {
            e.preventDefault();
            const message = messageInput.value;

            if (message === "") return
            displayMessage(message)
            socket.emit('send-message', message, room)//server  socket.on('send-message',...
            messageInput.value = ""
        })
        // joinRoomButtom.addEventListener("click", () =>{
        //     const room =roomInput.value
        // })
        function displayMessage(message) {
            console.log(message)
            const div = document.createElement("div")
            div.textContent = message
            console.log(div)
            document.getElementById("message-container").append(div)
            // Auto-scroll to bottom
            const container = document.getElementById("message-container");
            container.scrollTop = container.scrollHeight;
        }


    </script>
</body>

</html>